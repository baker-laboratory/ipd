// Top level selection expression
start: selection

// Selection expressions
selection: maybe_assign_expr
maybe_assign_expr: assign_expr
                  | or_expr
assign_expr: IDENTIFIER "=" or_expr
// selection: or_expr

// Logical operations with precedence
or_expr: and_expr (_OR and_expr)*
and_expr: maybe_not_expr (_AND maybe_not_expr)*
atom_expr: primary_selection | "(" selection ")"
maybe_not_expr: (not_expr | atom_expr)
not_expr: _NOT atom_expr

// Primary selections
primary_selection:
                  | generic_selection
                  | named_selection
                  | identifier_selection
                  | id_matching_selection
                  | entity_expansion
                  | bond_expansion
                  | proximity_selection
                  | property_selection
                  | flag_selection
                  | chemical_class
                  | coordinate_selection
                  | atom_typing
                  | first_last_selection
                  | extend_selection
                  | path_selection

// Generic selections
generic_selection: "all"|"*"|"none"|"enabled"

// Named selections
named_selection: IDENTIFIER
                | "%" IDENTIFIER
                | "?" IDENTIFIER
                // | IDENTIFIER "*"

// First/Last atom selections
first_last_selection: ("first"|"last") selection

// Identifier selections

identifier_sel_str: ("model"|"m."|"chain"|"c."|"segi"|"s."|"resn"|"r."|"name"|"n."|"alt"|"pepseq"|"ps."|"label") STRING_LIST
identifier_sel_int: ("resi"|"i."|"index"|"idx."|"id"|"rank" ) INT_LIST
identifier_selection: identifier_sel_str | identifier_sel_int

// Lists with + syntax
INT_RANGE: INT ["-" INT]
RESI_LIST: INT_RANGE ("+" INT_RANGE)*
INT_LIST: INT_RANGE ("+" INT_RANGE)*
STRING_LIST: STRING ("+" STRING)*
ELEM: /[A-Z][A-Za-z]?/
ELEM_LIST: ELEM ("+" ELEM)*

// Identifier matching
id_matching_selection: selection "in" selection
                     | selection "like" selection

// Entity expansion
entity_expansion: ("byobject"|"bysegi"|"bs."|"bychain"|"bc."|"byres"|"br."|"bycalpha"|"bca."|"bymolecule"|"bm."|"byfragment"|"bf."|"byring"|"bycell") selection

// Bond expansion
bond_expansion: bound_to_selection
               | neighbor_selection

bound_to_selection: ("bound_to"|"bto.") selection
neighbor_selection: ("neighbor"|"nbr.") selection

// Extend selection
extend_selection: selection "extend" FLOAT

// Proximity selections
proximity_selection: within_selection
                    | around_selection
                    | expand_selection
                    | gap_selection
                    | near_to_selection
                    | beyond_selection

within_selection: selection ("within"|"w.") FLOAT "of" selection
around_selection: selection ("around"|"a.") FLOAT
expand_selection: selection ("expand"|"x.") FLOAT
gap_selection: selection "gap" FLOAT
near_to_selection: selection ("near_to"|"nto.") FLOAT "of" selection
beyond_selection: selection ("beyond"|"be.") FLOAT "of" selection

// Property selections
property_selection: partial_charge_selection
                   | formal_charge_selection
                   | b_factor_selection
                   | occupancy_selection
                   | ss_selection
                   | elem_selection
                   | custom_prop_selection
                   | stereo_selection

partial_charge_selection: ("partial_charge"|"pc.") COMPARISON
formal_charge_selection: ("formal_charge"|"fc.") COMPARISON
b_factor_selection: "b" COMPARISON
occupancy_selection: "q" COMPARISON
ss_selection: "ss" SS_TYPE
elem_selection: ("elem"|"e.") ELEM_LIST
custom_prop_selection: "p." IDENTIFIER COMPARISON
stereo_selection: "stereo" ("R"|"S")

// Comparison operators for properties
COMPARISON: COMP_OP (FLOAT | INT)
          | "in" INT_RANGE
COMP_OP: "<"|">"|"="|"<="|">="|"!="

// Secondary structure types
SS_TYPE: /[HST]+/ | STRING


// Flag selections
flag_selection: "bonded"
              | "protected"
              | "fixed"|"fxd."
              | "restrained"|"rst."
              | "masked"|"msk."
              | ("flag"|"f.") INT

// Chemical class selections
chemical_class: "organic"|"org."
              | "inorganic"|"ino."
              | "solvent"|"sol."
              | "polymer"|"pol."
              | "polymer.protein"
              | "polymer.nucleic"
              | "guide"
              | "nucleic"
              | "ligand"
              | "hetatm"
              | "hydrogens"|"h."
              | "backbone"|"bb."
              | "sidechain"|"sc."
              | "metals"
              | "donors"|"don."
              | "acceptors"|"acc."

// Coordinate selections
coordinate_selection: state_selection
                    | present_selection
                    | coord_comparison

state_selection: "state" INT
present_selection: "present"|"pr."
coord_comparison: ("x"|"y"|"z") COMPARISON

// Atom typing selections
atom_typing: text_type_selection | numeric_type_selection
text_type_selection: ("text_type"|"tt.") STRING
numeric_type_selection: ("numeric_type"|"nt.") INT

// Path selection (1foo/G/X/444/CA format)
path_selection: PATH

// Path format model/segi/chain/resi/name
PATH: /[^\/\s]+(\/(([^\/\s]+)|\*))+/

// Logical operators
_OR: "or"|"|"
//| /\s+(?![a-zA-Z])/
_AND: "and"|"&"
_NOT: "not"|"!"

// Base types
// IDENTIFIER: /[a-zA-Z][a-zA-Z0-9_]*/
IDENTIFIER: /\'?\"?[a-zA-Z][a-zA-Z0-9_]*\*?\"?\'?/
STRING: /"[^"]*"/ | /'[^']*'/ | /[a-zA-Z0-9_]+/
CHAIN_ID: /[A-Za-z0-9]/
INT.2: /[-+]?[0-9]+/
FLOAT.2: /[+-]?[0-9]*\.[0-9]+/ | INT
COLOR: /[a-zA-Z][a-zA-Z0-9_]*/

// Ignore whitespace and comments
COMMENT: /#[^\n]*/
%import common.WS
%ignore WS
%ignore COMMENT

