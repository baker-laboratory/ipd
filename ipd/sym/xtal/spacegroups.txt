import numpy as np

void get_symmops_P1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(1);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0, 0, 0 ) );
}

void get_symmops_Pminus1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(2);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P121( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(2);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0, 0.5 ) );
}

void get_symmops_P1211( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(2);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0, 0.5 ) );
}

void get_symmops_C121( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=2; ++ii ) {
      rt_out[2+ii] = rt_out[ii];
      rt_out[2+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0, 0.5 ) );
}

void get_symmops_P1m1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(2);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0, 0.5, 0 ) );
}

void get_symmops_P1c1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(2);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0, 0.5, 0 ) );
}

void get_symmops_C1m1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=2; ++ii ) {
      rt_out[2+ii] = rt_out[ii];
      rt_out[2+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0, 0.5, 0 ) );
}

void get_symmops_C1c1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=2; ++ii ) {
      rt_out[2+ii] = rt_out[ii];
      rt_out[2+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0, 0.5, 0 ) );
}

void get_symmops_P12slashm1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P121slashm1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_C12slashm1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P12slashc1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P121slashc1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P121slashn1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_C12slashc1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P222( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P2221( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P21212( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P212121( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_C2221( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_C222( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_F222( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_I222( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_I212121( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pmm2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pmc21( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pcc2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pma2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pca21( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pnc2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pmn21( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pba2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pna21( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pnn2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Cmm2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Cmc21( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Ccc2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Amm2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Abm2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Ama2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Aba2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Fmm2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Fdd2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Imm2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Iba2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Ima2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0 ) );
}

void get_symmops_Pmmm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pnnn__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pccm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pban__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pmma( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pnna( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pmna( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pcca( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pbam( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pccn( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pbcm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pnnm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pmmn__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pbcn( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pbca( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Pnma( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Cmcm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Cmca( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Cmmm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Cccm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Cmma( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Ccca__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Fmmm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(32);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[16+ii] = rt_out[ii];
      rt_out[16+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Fddd__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(32);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[16+ii] = rt_out[ii];
      rt_out[16+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Immm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Ibam( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Ibca( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Imma( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_P4( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P41( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.75) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P42( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P43( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.75) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.25) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_I4( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_I41( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_Pminus4( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Iminus4( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=4; ++ii ) {
      rt_out[4+ii] = rt_out[ii];
      rt_out[4+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashn__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashn__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I4slashm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I41slasha__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P422( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4212( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4122( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.25) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P41212( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.75) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.25) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4222( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42212( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4322( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.75) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.25) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.25) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.75) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P43212( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.75) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.25) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.25) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.75) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I422( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I4122( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4mm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P4bm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P42cm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P42nm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P4cc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P4nc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P42mc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_P42bc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_I4mm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_I4cm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_I41md( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_I41cd( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.25) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0 ) );
}

void get_symmops_Pminus42m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus42c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus421m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus421c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus4m2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus4c2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus4b2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Pminus4n2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(8);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Iminus4m2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Iminus4c2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}



void get_symmops_Iminus42m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_Iminus42d( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.25) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.75) );
   for ( int ii=1; ii<=8; ++ii ) {
      rt_out[8+ii] = rt_out[ii];
      rt_out[8+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashmmm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashmcc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashnbm__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashnnc__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashmbm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashmnc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashnmm__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P4slashncc__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashmmc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashmcm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashnbc__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashnnm__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashmbc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashmnm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashnmc__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P42slashncm__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(16);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I4slashmmm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(32);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=16; ++ii ) {
      rt_out[16+ii] = rt_out[ii];
      rt_out[16+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I4slashmcm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(32);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=16; ++ii ) {
      rt_out[16+ii] = rt_out[ii];
      rt_out[16+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I41slashamd__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(32);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   for ( int ii=1; ii<=16; ++ii ) {
      rt_out[16+ii] = rt_out[ii];
      rt_out[16+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_I41slashacd__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(32);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   for ( int ii=1; ii<=16; ++ii ) {
      rt_out[16+ii] = rt_out[ii];
      rt_out[16+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 0.5, 0.5 ) );
}

void get_symmops_P3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(3);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_P31( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(3);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_P32( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(3);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_R3__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(9);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=3; ++ii ) {
      rt_out[3+ii] = rt_out[ii];
      rt_out[3+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[6+ii] = rt_out[ii];
      rt_out[6+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_Pminus3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_Rminus3__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(18);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=6; ++ii ) {
      rt_out[6+ii] = rt_out[ii];
      rt_out[6+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P312( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P321( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P3112( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P3121( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P3212( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P3221( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_R32__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(18);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=6; ++ii ) {
      rt_out[6+ii] = rt_out[ii];
      rt_out[6+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P3m1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_P31m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P3c1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_P31c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_R3m__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(18);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=6; ++ii ) {
      rt_out[6+ii] = rt_out[ii];
      rt_out[6+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_R3c__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(18);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=6; ++ii ) {
      rt_out[6+ii] = rt_out[ii];
      rt_out[6+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0 ) );
}

void get_symmops_Pminus31m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_Pminus31c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_Pminus3m1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_Pminus3c1( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_Rminus3m__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(36);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=12; ++ii ) {
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_Rminus3c__H( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(36);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   for ( int ii=1; ii<=12; ++ii ) {
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.666666666666667,0.333333333333333,0.333333333333333) );
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.333333333333333,0.666666666666667,0.666666666666667) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P6( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P61( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.166666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.833333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P65( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.833333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.166666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P62( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P64( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P63( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_Pminus6( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(6);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P6slashm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P63slashm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P622( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P6122( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.166666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.833333333333333) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.833333333333333) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.166666666666667) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P6522( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.833333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.166666666666667) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.166666666666667) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.833333333333333) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P6222( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}


void get_symmops_P6422( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.333333333333333) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.666666666666667) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P6322( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0.5 ) );
}

void get_symmops_P6mm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P6cc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P63cm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_P63mc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 0 ) );
}

void get_symmops_Pminus6m2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_Pminus6c2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_Pminus62m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_Pminus62c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P6slashmmm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P6slashmcc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P63slashmcm( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P63slashmmc( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,1,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, -1,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,-1,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 1,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.666666666666667, 0.666666666666667, 0.5 ) );
}

void get_symmops_P23( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_F23( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=12; ++ii ) {
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[36+ii] = rt_out[ii];
      rt_out[36+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_I23( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=12; ++ii ) {
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_P213( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(12);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_I213( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   for ( int ii=1; ii<=12; ++ii ) {
      rt_out[12+ii] = rt_out[ii];
      rt_out[12+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pmminus3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pnminus3__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Fmminus3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[72+ii] = rt_out[ii];
      rt_out[72+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Fdminus3__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[72+ii] = rt_out[ii];
      rt_out[72+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Imminus3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Paminus3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Iaminus3( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_P432( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_P4232( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_F432( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[72+ii] = rt_out[ii];
      rt_out[72+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_F4132( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[72+ii] = rt_out[ii];
      rt_out[72+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_I432( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_P4332( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_P4132( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_I4132( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pminus43m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Fminus43m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[72+ii] = rt_out[ii];
      rt_out[72+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Iminus43m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pminus43n( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(24);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Fminus43c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[72+ii] = rt_out[ii];
      rt_out[72+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Iminus43d( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   for ( int ii=1; ii<=24; ++ii ) {
      rt_out[24+ii] = rt_out[ii];
      rt_out[24+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pmminus3m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pnminus3n__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pmminus3n( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Pnminus3m__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(48);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Fmminus3m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(192);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=48; ++ii ) {
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[96+ii] = rt_out[ii];
      rt_out[96+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[144+ii] = rt_out[ii];
      rt_out[144+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Fmminus3c( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(192);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   for ( int ii=1; ii<=48; ++ii ) {
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[96+ii] = rt_out[ii];
      rt_out[96+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[144+ii] = rt_out[ii];
      rt_out[144+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Fdminus3m__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(192);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.75,0.25) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.5,0.75) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.25,0.75) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0,0.25) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.25,0.75) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.5,0.25) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0,0.75) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.75,0.25) );
   for ( int ii=1; ii<=48; ++ii ) {
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[96+ii] = rt_out[ii];
      rt_out[96+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[144+ii] = rt_out[ii];
      rt_out[144+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Fdminus3c__2( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(192);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0.25,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.5,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.5) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.5,0.75) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0.25,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.5,0.75) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.25,0.25) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.5) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.5,0.75) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.25,0.75) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.5,0.25) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0,0.75) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.75,0.25) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0.75,0.75) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.5,0.25) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.5) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.5,0.25) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0.75,0.75) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.5) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.5,0.25) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.75,0.75) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.5) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.5,0.25) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0.5,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.75,0.25) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.5,0.75) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0,0.25) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.25,0.75) );
   for ( int ii=1; ii<=48; ++ii ) {
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0,0.5,0.5) );
      rt_out[96+ii] = rt_out[ii];
      rt_out[96+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0,0.5) );
      rt_out[144+ii] = rt_out[ii];
      rt_out[144+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(0.5, 0.5, 0.5 ) );
}

void get_symmops_Imminus3m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=48; ++ii ) {
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_Iaminus3d( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(96);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[3] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[4] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[5] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[6] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[7] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[8] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[9] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[10] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   rt_out[11] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[12] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[13] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[14] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[15] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[16] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[17] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[18] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[19] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[20] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[21] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.25) );
   rt_out[22] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[23] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[24] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[25] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,-1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[26] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, -1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[27] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[28] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 1,0,0, 0,0,-1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[29] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[30] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, -1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[31] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[32] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 1,0,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[33] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, -1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[34] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,-1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.75) );
   rt_out[35] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 1,0,0, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[36] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,1, 0,-1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.25) );
   rt_out[37] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0,0,0.5) );
   rt_out[38] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( -1,0,0, 0,0,-1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.25,0.25) );
   rt_out[39] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, -1,0,0, 0,1,0 )  , numeric::xyzVector<core::Real>(0.5,0,0) );
   rt_out[40] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,0,1, 0,1,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[41] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,-1, -1,0,0 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[42] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,-1,0, 0,0,1, 1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0.5,0) );
   rt_out[43] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,-1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.75) );
   rt_out[44] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,-1, 1,0,0 )  , numeric::xyzVector<core::Real>(0,0.5,0.5) );
   rt_out[45] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,1,0, 1,0,0 )  , numeric::xyzVector<core::Real>(0.75,0.75,0.75) );
   rt_out[46] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,1,0, 0,0,1, -1,0,0 )  , numeric::xyzVector<core::Real>(0.5,0,0.5) );
   rt_out[47] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,-1, 0,1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.25,0.75) );
   rt_out[48] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 0,0,1, 0,-1,0, -1,0,0 )  , numeric::xyzVector<core::Real>(0.25,0.75,0.25) );
   for ( int ii=1; ii<=48; ++ii ) {
      rt_out[48+ii] = rt_out[ii];
      rt_out[48+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0.5) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}

void get_symmops_B11m( utility::vector1<core::kinematics::RT> &rt_out, CheshireCell &cc ) {
   rt_out.resize(4);
   rt_out[1] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   rt_out[2] = core::kinematics::RT( numeric::xyzMatrix<core::Real>::rows( 1,0,0, 0,-1,0, 0,0,1 )  , numeric::xyzVector<core::Real>(0,0,0) );
   for ( int ii=1; ii<=2; ++ii ) {
      rt_out[2+ii] = rt_out[ii];
      rt_out[2+ii].set_translation( rt_out[ii].get_translation() + numeric::xyzVector<core::Real>(0.5,0.5,0) );
   }
   cc = CheshireCell( numeric::xyzVector<core::Real>( 0, 0, 0), numeric::xyzVector<core::Real>(1, 1, 1 ) );
}
